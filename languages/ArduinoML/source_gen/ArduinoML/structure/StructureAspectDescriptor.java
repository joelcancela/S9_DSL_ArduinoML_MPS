package ArduinoML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActionInput = createDescriptorForActionInput();
  /*package*/ final ConceptDescriptor myConceptActuator = createDescriptorForActuator();
  /*package*/ final ConceptDescriptor myConceptApp = createDescriptorForApp();
  /*package*/ final ConceptDescriptor myConceptIAction = createDescriptorForIAction();
  /*package*/ final ConceptDescriptor myConceptSensor = createDescriptorForSensor();
  /*package*/ final ConceptDescriptor myConceptSignalHandler = createDescriptorForSignalHandler();
  /*package*/ final ConceptDescriptor myConceptSoundType = createDescriptorForSoundType();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  /*package*/ final EnumerationDescriptor myEnumerationSIGNAL = new EnumerationDescriptor_SIGNAL();
  /*package*/ final EnumerationDescriptor myEnumerationSOUND = new EnumerationDescriptor_SOUND();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptActionInput, myConceptActuator, myConceptApp, myConceptIAction, myConceptSensor, myConceptSignalHandler, myConceptSoundType, myConceptState, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.ActionInput:
        return myConceptActionInput;
      case LanguageConceptSwitch.Actuator:
        return myConceptActuator;
      case LanguageConceptSwitch.App:
        return myConceptApp;
      case LanguageConceptSwitch.IAction:
        return myConceptIAction;
      case LanguageConceptSwitch.Sensor:
        return myConceptSensor;
      case LanguageConceptSwitch.SignalHandler:
        return myConceptSignalHandler;
      case LanguageConceptSwitch.SoundType:
        return myConceptSoundType;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationSIGNAL, myEnumerationSOUND);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Action", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a3cL);
    b.class_(false, false, false);
    b.parent(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a6c623eL);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/76804809440598588");
    b.version(2);
    b.property("signal", 0x110dd9137bf9a3fL).type(MetaIdFactory.dataTypeId(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a37L)).origin("76804809440598591").done();
    b.associate("target", 0x110dd9137bf9a41L).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a26L).optional(false).origin("76804809440598593").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionInput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "ActionInput", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a6c61f6L);
    b.class_(false, false, false);
    b.parent(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a6c623eL);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/3036354640689783286");
    b.version(2);
    b.property("signal", 0x2a234c755a6c61f7L).type(MetaIdFactory.dataTypeId(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a37L)).origin("3036354640689783287").done();
    b.associate("target", 0x2a234c755a6c61f9L).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x23a071ae554cbc67L).optional(false).origin("3036354640689783289").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActuator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Actuator", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a26L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/76804809440598566");
    b.version(2);
    b.property("pin", 0x110dd9137bf9a29L).type(PrimitiveTypeId.INTEGER).origin("76804809440598569").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "App", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a23L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/76804809440598563");
    b.version(2);
    b.aggregate("actuators", 0x110dd9137bf9a2bL).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a26L).optional(false).ordered(true).multiple(true).origin("76804809440598571").done();
    b.aggregate("sensors", 0x23a071ae554d1334L).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x23a071ae554cbc67L).optional(true).ordered(true).multiple(true).origin("2567176781170545460").done();
    b.aggregate("states", 0x110dd9137bf9a48L).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a31L).optional(false).ordered(true).multiple(true).origin("76804809440598600").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "IAction", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a6c623eL);
    b.interface_();
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/3036354640689783358");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Sensor", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x23a071ae554cbc67L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/2567176781170523239");
    b.version(2);
    b.property("pin", 0x23a071ae554cbc6aL).type(PrimitiveTypeId.INTEGER).origin("2567176781170523242").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalHandler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "SignalHandler", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x763d497ee8ebb06bL);
    b.class_(false, false, false);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/8520046879477313643");
    b.version(2);
    b.associate("actuator", 0x763d497ee8ebb06cL).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a26L).optional(false).origin("8520046879477313644").done();
    b.aggregate("soundTypes", 0x763d497ee8ebb06eL).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x763d497ee8ea5bcbL).optional(false).ordered(true).multiple(true).origin("8520046879477313646").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSoundType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "SoundType", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x763d497ee8ea5bcbL);
    b.class_(false, false, false);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/8520046879477226443");
    b.version(2);
    b.property("sound", 0x763d497ee8ea5bccL).type(MetaIdFactory.dataTypeId(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x763d497ee8ea3823L)).origin("8520046879477226444").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "State", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a31L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/76804809440598577");
    b.version(2);
    b.property("isInitial", 0x110dd9137c07110L).type(PrimitiveTypeId.BOOLEAN).origin("76804809440653584").done();
    b.aggregate("sounds", 0x763d497ee8ea5bc7L).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x763d497ee8ebb06bL).optional(true).ordered(true).multiple(false).origin("8520046879477226439").done();
    b.aggregate("actions", 0x131d58101669f0d3L).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a3cL).optional(true).ordered(true).multiple(true).origin("1377353887164002515").done();
    b.aggregate("transitions", 0x2a234c755a6798bbL).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a65c3b7L).optional(true).ordered(true).multiple(true).origin("3036354640689469627").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Transition", 0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a65c3b7L);
    b.class_(false, false, false);
    b.origin("r:7bfc2ac3-4866-4488-b53e-56494783dd09(ArduinoML.structure)/3036354640689349559");
    b.version(2);
    b.associate("state", 0x2a234c755a65c3beL).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x110dd9137bf9a31L).optional(false).origin("3036354640689349566").done();
    b.aggregate("condition", 0x2a234c755a65c3caL).target(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x2a234c755a6c623eL).optional(true).ordered(true).multiple(true).origin("3036354640689349578").done();
    return b.create();
  }
}
