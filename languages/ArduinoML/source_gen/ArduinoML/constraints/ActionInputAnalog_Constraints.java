package ArduinoML.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class ActionInputAnalog_Constraints extends BaseConstraintsDescriptor {
  public ActionInputAnalog_Constraints() {
    super(MetaAdapterFactory.getConcept(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x347aaeae4e7913ddL, "ArduinoML.structure.ActionInputAnalog"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x347aaeae4e7913ddL, 0x347aaeae4e7913e2L, "comparator"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x347aaeae4e7913ddL, 0x347aaeae4e7913e2L), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "comparator";
        return (SPropertyOperations.getString(propertyValue)).equals("<") || (SPropertyOperations.getString(propertyValue)).equals("<=") || (SPropertyOperations.getString(propertyValue)).equals("==") || (SPropertyOperations.getString(propertyValue)).equals(">=") || (SPropertyOperations.getString(propertyValue)).equals(">");
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x347aaeae4e7913ddL, 0x347aaeae4e7913deL, "value"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x99409c00ced4933L, 0xb9e3928d0c704016L, 0x347aaeae4e7913ddL, 0x347aaeae4e7913deL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "value";
        return (SPropertyOperations.getInteger(propertyValue)) >= 0 && (SPropertyOperations.getInteger(propertyValue)) <= 1023;
      }
    });
    return properties;
  }
}
